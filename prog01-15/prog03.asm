
; Программа №3: простейшая программа, ужатая по максимуму для 64-разрядной машины
; Программа №3: простейшая программа, ужатая по максимуму для 64-разрядной машины
; Программа №3: простейшая программа, ужатая по максимуму для 64-разрядной машины

; Ужать программу можно, если заменить машинный код из 10 байт на аналогичный из 9 байт
; В данном случае можно сделать три замены кода, сократив программу на 4 байт
;   [1] `mov rbx, 1` ==> `xor rbx, rbx; inc rbx` (4 байта ==> 3 байта), экономия 1 байт
;   [2] `mov rax, 1` ==> `xor rax, rax; inc rax` (4 байта ==> 3 байта), экономия 1 байт
;   [3] `mov rbx, 0` ==> `xor rbx, rbx` (4 байта ==> 2 байта), экономия 2 байта

format ELF64 executable
entry _start

new_line equ 0xA
message db "Hello World", new_line, 0
len = $ - message

_start:
  mov rax, 4                ; Вызываем функцию 4 (вывод сообщения)
  mov rbx, 1                ; Выводим строку на экран терминала
  mov rcx, message          ; Настраиваемся на выводимую строку (ее адрес)
  mov rdx, len              ; Указываем длину строки (сколько байт выводим с адреса)
  int 0x80                  ; Системный вызов
  mov rax, 1                ; Вызываем функцию 1 (окончание работы)  
  mov rbx, 0                ; Указываем параметр 0 (нормальный выход)
  int 0x80